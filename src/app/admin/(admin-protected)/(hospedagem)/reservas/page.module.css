.mobileContainer {
    margin-left: 24px;
    margin-right: 24px;
    padding-bottom: 6rem;
    min-height: 100vh;
}

.title {
    font-size: 2rem;
    font-weight: 600;
    color: var(--color-text);
    margin-bottom: 1rem;
}


.acoes {
    display: flex;
    gap: 1rem;
    align-items: center;
    justify-content: center;
    color: var(--color-primary);
}

.ativa {
    background-color: #45A242;
    color: white;
    padding: 0.2rem 1rem;
    border-radius: 24px;
}

.prevista {
    background-color: #CC9907;
    color: white;
    padding: 0.2rem 1rem;
    border-radius: 24px;
}

.encerrada {
    background-color: #DC2626;
    color: white;
    padding: 0.2rem 1rem;
    border-radius: 24px;
}

.newRequest {
    display: flex;
    justify-content: space-between;
    align-items: center;
    border: 1px solid #A5E2A2;
    background-color: #EAFCE9;
    height: 61px;
    margin-bottom: 1rem;
    border-radius: 8px;
    padding-left: 1rem;
    font-size: 1rem;
    font-weight: 600;
}

.newRequestButton {
    display: flex;
    justify-content: flex-end;
    align-items: center;
    padding-right: 1rem;
}

.filterModalContent {
    display: flex;
    flex-direction: column;
    gap: 1rem;
    margin-bottom: 1rem;
}

.filterStatus {
    display: flex;
    flex-direction: column;
    gap: 1rem;
    margin-bottom: 3rem;
}

.filterModalButtons {
    display: flex;
    justify-content: space-between;
    align-items: center;
    gap: 1rem;
}

.filterModalButtonsLeft {
    display: flex;
    justify-content: flex-start;
    align-items: center;
} 

@media (max-width: 768px) {
    .actionButton {
        background-color: var(--color-slate-100);
        border: 1px solid var(--color-border);
        border-radius: 8px;
        padding: 4px;
        width: 28px;
        height: 28px;
    }

    .buttonsTop {
        display: flex;
        margin-top: 1rem;
        flex-direction: row-reverse;
        gap: 4rem;
        max-height: 40px;
        align-items: center;
        justify-content: center;
    
    
        /* botao ter seu tamanho baseado no tamanho do conteudo dentro dele*/
        > * {
            flex: 1;
            white-space: nowrap;
        }
    }
}

@media (min-width: 768px) {
    .mobileContainer {
        display: none;
    }
}
